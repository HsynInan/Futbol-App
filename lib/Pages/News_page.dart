import 'package:flutter/material.dart';
import 'package:futbal_gundem/API_Request/Haber_Api.dart';
import 'package:futbal_gundem/Webview/News_webview.dart';
import 'package:futbal_gundem/Widgets/Haberler_widget.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'dart:async';

class NewsPage extends StatefulWidget {
  NewsPage({
    Key key,
  }) : super(key: key);

  @override
  _NewsPageState createState() => _NewsPageState();
}

final HttpService httpService = HttpService();

class _NewsPageState extends State<NewsPage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: RefreshIndicator(
        onRefresh: Yenile,
        child: FutureBuilder(
          future: httpService.getPosts(),
          builder:
              (BuildContext context, AsyncSnapshot<List<HaberAPI>> snapshot) {
            if (snapshot.hasData) {
              List<HaberAPI> posts = snapshot.data;
              return buildListView(posts, context);
            } else {
              return Center(child: CircularProgressIndicator());
            }
          },
        ),
      ),
    );
  }
}

Future<Null> Yenile() async {
  await Future.delayed((Duration(seconds: 1)));
}

Widget buildListView(List<HaberAPI> posts, BuildContext context) {
  return ListView(
    children: posts
        .map((HaberAPI post) => InkWell(
              onTap: () {
                Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => HaberDetails(
                              url: '${post.link}',
                            )));
              },
              child: HaberlerWidget(
                baslik: '${post.title}',
                kaynakAdi: '${post.source}',
                //  imagelink: '${post.image}',
                // imageLink: '${post.image}',
              ),
            ))
        .toList(),
  );
}

class HttpService {
  final String postsURL =
      "http://192.168.1.106/FutbolGundem/mynetHaber_spor.php";

  Future<List<HaberAPI>> getPosts() async {
    final res = await http.get(postsURL);

    if (res.statusCode == 200) {
      List<dynamic> body = jsonDecode(res.body);

      List<HaberAPI> veri = [];

      body.forEach((element) {
        veri.add(HaberAPI.fromJson(element));
      });
/*
      List<Autogenerated> posts = body
          .map(
            (dynamic item) => Autogenerated.fromJson(item),
          )
          .toList();
          */

      return veri;
    } else {
      throw "Unable to retrieve posts.";
    }
  }
}
